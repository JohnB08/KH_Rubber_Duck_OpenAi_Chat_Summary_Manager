// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RubberDuckMCPServer.Models.Context;

#nullable disable

namespace RubberDuckMCPServer.Migrations
{
    [DbContext(typeof(McpDbContext))]
    partial class McpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("RubberDuckMCPServer.Models.POCO.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UniqueChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UniqueChatId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("RubberDuckMCPServer.Models.POCO.ChatId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GeneratedChatId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChatIds");
                });

            modelBuilder.Entity("RubberDuckMCPServer.Models.POCO.RawJson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JsonBlob")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UniqueChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UniqueChatId");

                    b.ToTable("RawJsons");
                });

            modelBuilder.Entity("RubberDuckMCPServer.Models.POCO.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpenAiToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("RubberDuckMCPServer.Models.POCO.Chat", b =>
                {
                    b.HasOne("RubberDuckMCPServer.Models.POCO.ChatId", "ChatId")
                        .WithMany()
                        .HasForeignKey("UniqueChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatId");
                });

            modelBuilder.Entity("RubberDuckMCPServer.Models.POCO.RawJson", b =>
                {
                    b.HasOne("RubberDuckMCPServer.Models.POCO.ChatId", "ChatId")
                        .WithMany()
                        .HasForeignKey("UniqueChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatId");
                });
#pragma warning restore 612, 618
        }
    }
}
